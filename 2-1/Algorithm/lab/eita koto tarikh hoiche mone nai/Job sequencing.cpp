/*
             coded by sovon üê∏üçâ
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚¢†‚¢Ñ‚†Ñ‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£∂‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£æ‚£ø‚£∑‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ø‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚°ø‚£ø‚†ø‚†õ‚†õ‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£¶‚£§‚£§‚£¥‚£∂‚¢§‚†ò‚£ø‚£∑‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£ø‚£ø‚¢ø‚¢ø‚°ü‚†à‚†ô‚†õ‚†â‚†Ä‚¢∫‚¢õ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†í‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚£ø‚£ß‚£æ‚£∑‚£∂‚†Ü‚†¢‚†Ä‚†Ñ‚°π‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚£ø‚£ø‚£ø‚£ã‚°ç‚†õ‚†Ä‚£§‚°ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ä‚°Ä‚†Ñ‚†ê‚£∫‚£ø‚£ø‚£ø‚£≠‚£§‚£§‚£æ‚¢è‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚°Ñ‚°Ä‚¢ö‚£§‚£†‚£Ω‚£æ‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£è‚°æ‚¢∏‚¢®‚¢†‚†Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚††‚£Ä‚†à‚¢ß‚°û‚£ø‚£ü‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢É‚£º‚¢£‚¢∞‚†Ü‚††‚£ê‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚¢†‚£µ‚¢Ø‚£∂‚£û‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£§‚°æ‚£á‚¢∏‚¢ß‚°á‚†â‚†Ä‚£Ü‚†ê‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚¢®‚£ª‚¢õ‚£∑‚£ª‚£ø‚£ø‚°ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ø‚£ø‚£ø‚£ã‚°≠‚¢∞‚¢Ø‚£ø‚°æ‚£ø‚£∂‚££‚£ø‚°∂‚£†‚†Ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚¢Ä‚°ã‚†©‚†ì‚¢å‚†õ‚£Ω‚£ø‚¢£‚£ø‚£ø‚£ø‚°ü‚†ø‚¢º‚£π‚£ø‚£ø‚£Ü‚¢≥‚°æ‚£ø‚£ü‚£ø‚£ø‚£ø‚£ø‚£ø‚°µ‚£Ü‚†Ñ‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚¢º‚†â‚†â‚†â‚†Ä‚†ã‚¢º‚£ø‚£ø‚£ø‚£ø‚°ü‚¢†‚†Ä‚†Ä‚†à‚†â‚†â‚†à‚†à‚†â‚†Å‚†â‚£π‚£ø‚£ø‚£ø‚£ø‚£ø‚£û‚°é‚°Ñ‚†Ä‚†Ä‚†Ä
‚†Ä‚°ó‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚†ü‚£ë‚°ò‚°Ä‚†∞‚¢Ø‚†à‚£ê‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ü‚†Æ‚†Ñ‚†Ä‚†Ä‚†Ä
‚¢†‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢º‚£ø‚£ø‚£ß‚£ñ‚¢°‚£ß‚£§‚†Ä‚£Å‚£í‚†Ç‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°ü‚†ª‚¢ø‚£ø‚£ø‚¢ø‚¢´‚°ø‚°ò‚°Ñ‚†Ä‚†Ä
‚¢∏‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚¢ø‚£ø‚£¶‚°à‚†ô‚†Ä‚†É‚†û‚¢∑‚¢ò‚¢∞‚°±‚°æ‚£∏‚£á‚†Ä‚†à‚†ª‚£ø‚£ø‚†è‚†≠‚¢í‚†Å‚†Ä‚†Ä
‚¢∏‚£ø‚£¶‚£Ñ‚°†‚¢Ä‚¢Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚¢ø‚£∑‚£§‚£§‚£§‚£Ä‚£Ä‚£Ä‚£Ä‚£†‚£ø‚£ø‚†Ñ‚†Ä‚†Ä‚¢π‚°Ü‚†Ä‚†Ä‚†Ä‚¢Ç‚†Ä‚†Ä
‚†à‚†õ‚£ø‚£ø‚£Ω‚£ø‚£∂‚£¶‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†õ‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ñ‚†Ä‚†à‚¢ø‚£Ü‚†Ä‚†Ä‚†Ä‚°Ä‚†Ä
‚†Ä‚¢†‚£ø‚£ø‚°ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£¶‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†õ‚†ø‚¢ø‚°ª‚£ø‚£ø‚°∑‚†Ç‚†Ä‚†Ä‚†Ä‚£ø‚†ß‚†Ä‚†Ä‚†à‚¢Ä
*/
#include<bits/stdc++.h>
using namespace std;
int main(){
    int deadline[]={3,1,2,2};
    int prfit[]={50,10,20,30};
    int n=sizeof(deadline)/sizeof(deadline[0]);
    vector<pair<int,int>> v;
    for(int i=0;i<n;i++){
        v.push_back({prfit[i],deadline[i]});
    }
    sort(v.begin(),v.end(),greater<pair<int,int>>());
    int mx=0;
    for(int i=0;i<n;i++){
        mx=max(mx,v[i].second);
    }
    vector<int> slot(mx+1,-1);
    int cntjob=0;
    int totalprofit=0;
   /
    for(int i=0;i<n;i++){  
        for(int j=v[i].second;j>0;j--){  
            if(slot[j]==-1){  
                slot[j]=i;  // eikhane ja mon chay dewa jabe
                cntjob++;  
                totalprofit+=v[i].first;  
                break;
            }
        }
    }
    cout<<"Total jobs and profit is "<<cntjob<<" "<<totalprofit<<endl;
      
}
